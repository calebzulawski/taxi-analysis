// Generated by CoffeeScript 1.9.2
(function() {
  define(['jquery', 'd3'], function($, d3) {
    var baseUrl, neighborhoodPlot;
    baseUrl = '/taxi-analysis/cabbie_stats/data';
    neighborhoodPlot = function() {
      var cells, circles, h, path, projection, states, svg, w;
      w = 1280;
      h = 800;
      projection = d3.geo.mercator().center([-98, 38]).scale(700).translate([640, 360]);
      path = d3.geo.path().projection(projection);
      svg = d3.select('body').insert('svg:svg', 'h2').attr('width', w).attr('height', h);
      states = svg.append('svg:g').attr('id', 'states');
      circles = svg.append('svg:g').attr('id', 'circles');
      cells = svg.append('svg:g').attr('id', 'cells');
      d3.select('input[type=checkbox]').on('change', function() {
        cells.classed('voronoi', this.checked);
      });
      d3.json('http://mbostock.github.io/d3/talk/20111116/us-states.json', function(collection) {
        states.selectAll('path').data(collection.features).enter().append('svg:path').attr('d', path);
      });
      return d3.csv('/taxi-analysis/cabbie_stats/data/flights-airport.csv', function(flights) {
        var arc, countByAirport, linksByOrigin, locationByAirport, positions;
        linksByOrigin = {};
        countByAirport = {};
        locationByAirport = {};
        positions = [];
        arc = d3.geo.greatArc().source(function(d) {
          return locationByAirport[d.source];
        }).target(function(d) {
          return locationByAirport[d.target];
        });
        flights.forEach(function(flight) {
          var destination, links, origin;
          origin = flight.origin;
          destination = flight.destination;
          links = linksByOrigin[origin] || (linksByOrigin[origin] = []);
          links.push({
            source: origin,
            target: destination
          });
          countByAirport[origin] = (countByAirport[origin] || 0) + 1;
          countByAirport[destination] = (countByAirport[destination] || 0) + 1;
        });
        d3.csv(baseUrl + "/airports.csv", function(airports) {
          var g, polygons;
          airports = airports.filter(function(airport) {
            var location;
            if (countByAirport[airport.iata]) {
              location = [+airport.longitude, +airport.latitude];
              locationByAirport[airport.iata] = location;
              positions.push(projection(location));
              return true;
            }
          });
          polygons = d3.geom.voronoi(positions);
          g = cells.selectAll('g').data(airports).enter().append('svg:g');
          g.append('svg:path').attr('class', 'cell').attr('d', function(d, i) {
            return 'M' + polygons[i].join('L') + 'Z';
          }).on('mouseover', function(d, i) {
            d3.select('h2 span').text(d.name);
          });
          g.selectAll('path.arc').data(function(d) {
            return linksByOrigin[d.iata] || [];
          }).enter().append('svg:path').attr('class', 'arc').attr('d', function(d) {
            return path(arc(d));
          });
          circles.selectAll('circle').data(airports).enter().append('svg:circle').attr('cx', function(d, i) {
            return positions[i][0];
          }).attr('cy', function(d, i) {
            return positions[i][1];
          }).attr('r', function(d, i) {
            return Math.sqrt(countByAirport[d.iata]);
          }).sort(function(a, b) {
            return countByAirport[b.iata] - countByAirport[a.iata];
          });
        });
      });
    };
    return neighborhoodPlot();
  });

}).call(this);
